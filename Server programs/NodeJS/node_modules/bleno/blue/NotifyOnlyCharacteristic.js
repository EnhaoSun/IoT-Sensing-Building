var util = require('util');
var bleno = require('..');
var Handel = require('./handelData');
var handel = new Handel();

var BlenoCharacteristic = bleno.Characteristic;

function NotifyOnlyCharacteristic() {
    NotifyOnlyCharacteristic.super_.call(this,{
        uuid: '0002',
        properties: ['notify'],
    });
};

util.inherits(NotifyOnlyCharacteristic, BlenoCharacteristic);


NotifyOnlyCharacteristic.prototype.onSubscribe = function(maxValueSize, updateValueCallback){
    console.log('NotifyOnlyCharacteristic subscribe');

    this.changeInterval = setInterval(function(){
        var result = handel.select();
        //result would be sent to user
        const str = "date(" + result.ts + ")\n" + 
                    "window(" + result.WINDOW + ")\n" + 
                    "door(" + result.DOOR + ")\n" + 
                    "light(" + result.LIGHT + ")";
        //demo data
        //window/door: 0: closed; 1: opened;
        //light: 0: off; 1: on
        const demo_str = "date(2018-03-20 12:15:23)\n"+ "Closing the window";
        const data = Buffer.from(demo_str, 'ascii');
        console.log('NotifyOnlyCharacteristic update value: \n' + data);
        updateValueCallback(data);
    }.bind(this), 5000);
};

NotifyOnlyCharacteristic.prototype.onUnsubscribe = function(){
    console.log('NotifyOnlyCharacteristic unsubscribe');
    if (this.changeInterval) {
        clearInterval(this.changeInterval);
        this.changeInterval = null;
    }
};

NotifyOnlyCharacteristic.prototype.onNotify = function(){
    console.log('NotifyOnlyCharacteristic on notify');
}

module.exports = NotifyOnlyCharacteristic;
